// Code generated by hertz generator.

package pay

import (
	"apis/biz/utils"

	"context"

	pay "apis/hertz_gen/api/pay"
	pay_kitex "github.com/BeroKiTeer/MyGoMall/common/kitex_gen/payment"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CardPay .
// @router /api/pay/card_pay [POST]
func CardPay(ctx context.Context, c *app.RequestContext) {
	var err error
	var req pay.CardPayReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	err = utils.BindJson(c, &req)
	if err != nil {
		utils.SendErrResponse(ctx, c, consts.StatusBadRequest, err)
		return
	}
	reqRpc := pay_kitex.ChargeReq{
		Amount:     req.CardPayReq.Amount,
		CreditCard: req.CardPayReq.CreditCard,
		OrderId:    req.CardPayReq.OrderId,
	}
	//respRpc := pa
	utils.SendSuccessResponse(ctx, c, consts.StatusOK, resp)
}

func startPaymentConsumer() {

}
